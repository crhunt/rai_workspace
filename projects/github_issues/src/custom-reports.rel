/*****
 * HTML tables for reporting
 */
@inline
def html_issue_table[R] =
    html[issue_table[R]]

@inline
def issue_section[title, R] =
    concat["<h2>", concat[title, concat["</h2>", issue_table[R]]]]

@inline
def issue_table[R] =
    concat["""<table style="max-width: 100ch">
            <thead>
                  <tr>
                      <th>Nr</th>
                      <th>Title</th>
                      <th>Priority</th>
                      <th>Assignee</th>
                  </tr>
            </thead>
            <tbody>
        """,
        concat[string_join["", {issue_table_row[i] for i in R}],
            "</tbody></table>"]]

def issue_number_label[x in pull_request] =
    concat["PR&nbsp;#", string[github_issue:has_number[x]]]

def issue_number_label[x in issue] =
    concat["#", string[github_issue:has_number[x]]]

def issue_assignees_present[x in issue] =
    string_join[", ", {user:name[u] for u in github_issue:has_assignee[x]}]

def issue_assignees[x in issue] =
    issue_assignees_present[x] <++ ""

def issue_table_row[x] =
    concat["<tr><td>",
        concat[issue_number_label[x],
            concat["</td><td><a href=\"",
                concat[github_issue:has_url[x],
                    concat["\">",
                        concat[github_issue:has_title[x],
                            concat["</a></td>",
                                concat["<td>",
                                    concat[priority[x],
                                        concat["</td><td>",
                                            concat[issue_assignees[x],
                                                    "</td></tr>"]]]]]]]]]]]

/* Create strings */

@inline
def label_section[l] =
    issue_section[label[:name][l], {x: github_issue:has_label(x, l) and open(x)}]

@inline
def assignee_section[u] =
    issue_section[user[:name][u], {x: github_issue:has_assignee(x, u) and open(x)}]

@inline
def customer_report =
    string_join["\n", {label_section[l] for l in current_customer_label}]

@inline
def assignee_report =
    string_join["\n", {assignee_section[u] for u in User}]

/* Label: Priority */

def priority[gi]= github_issue:label_category[cat][gi] 
    from cat where { :priority; }(cat)

def priority[gi] = missing_value
    from missing_value where
    issue(gi) and
    not github_issue:label_category:priority(gi,_) and
    missing_value = "-"

/* Label: Customer */

ic { customer_label ⊆ Label }
ic { current_customer_label ⊆ customer_label }

def customer_label(l) =
    label:in:customer(l,_)

def current_customer_name = {"att"; "ey"; "lantik"}

def current_customer_label(l) =
    label:in:customer(l,current_customer_name)
