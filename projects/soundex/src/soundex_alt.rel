// Sound replacement rules
def soundex_replace_sql =
	{ ({"b"; "f"; "p"; "v";}, "1");
      ({"c"; "g"; "j"; "k"; "q"; "s"; "x"; "z";}, "2");
      ({"d";"t";}, "3");
      ("l", "4");
      ({"m";"n";}, "5");
      ("r", "6"); }

// Keep first letter
@inline
def soundex_list_sql[S] = 0, uppercase[substring[S,1,1]]
// Replace letters with sound encoding, drop letters without replacements
@inline
def soundex_list_sql[S](m,vv) = sort[n,v: soundex_replace_sql[ split_string[ lowercase[S]][n] ](v) ](m,nn,vv) from nn

// Join string and pad with zeros
@inline
def soundex_sql[S] = substring[ concat[ string_join["", soundex_filter[soundex_list_sql][S]], "000"], 1, 4 ]

def test_strings = 
	{ ("Robert", "R163");
      ("Rupert", "R163");
      ("Rubin", "R150");
      ("Ashcroft", "A261");
      ("Ashcraft", "A261");
      ("Tymczak", "T520");
      ("Pfister", "P236");
      ("Honeyman", "H555"); }

def test_output = name, answer, result
	from name, answer, result where
	test_strings(name, answer) and
	result = soundex_sql[name]

//def test_strings = {("Tymczak", "T520");}

//def output = soundex_sql[s: test_strings(s,_)]